# workflow의 이름
name: CI/CD

# 해당 workflow가 언제 실행될 것인지에 대한 트리거를 지정
on:
  push:
    branches:
      - master

# 해당 yml 내에서 사용할 key - value
env:
  S3_BUCKET_NAME: ezkorea-bucket
  PROJECT_NAME: ez_korea_app

jobs:
  CI-CD:
    runs-on: ubuntu-latest
    steps:

      ## jdk setting
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin' # https://github.com/actions/setup-java

      ## gradle caching
      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      ## create application-dev.yml
      - name: make application-dev.yml
        if: contains(github.ref, 'develop')
        run: |
          cd ./src/main/resources
          touch ./application-dev.yml
          echo "${{ secrets.PROPERTIES_DEV }}" > ./application-dev.yml
        shell: bash

      ## create application-test.yml
      - name: make application-test.yml
        run: |
          cd ./src/main/resources
          touch ./application-dev.yml
          echo "${{ secrets.PROPERTIES_TEST }}" > ./application-test.yml
        shell: bash

      ## create application-prod.yml
      - name: make application-prod.yml
        if: contains(github.ref, 'master')
        run: |
          cd ./src/main/resources
          touch ./application-prod.yml
          echo "${{ secrets.PROPERTIES_PROD }}" > ./application-prod.yml
        shell: bash

      - name: Setup MySQL
        uses: samin/mysql-action@v1
        with:
          character set server: 'utf8'
          mysql database: 'hybrid_dev'
          mysql user: 'ezkorea_dev_team'
          mysql password: ${{ secrets.MYSQL_PASSWORD }} # github Secret 탭에서 설정하세요!

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash

      ## gradle build
      - name: Build with Gradle
        run: ./gradlew build

      - name: Make zip file
        run: zip -r ./$GITHUB_SHA.zip .
        shell: bash

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_IAM_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_IAM_SECRET_KEY }}
          aws-region: ap-northeast-2

      # script files 복사
      - name: Copy script
        run: cp ./scripts/*.sh ./deploy
      
      # S3에 업로드
      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://$S3_BUCKET_NAME/$PROJECT_NAME/$GITHUB_SHA.zip

      # Deploy
      - name: Deploy
        run: |
          aws deploy create-deployment \
          --application-name ezkorea-project \
          --deployment-config-name CodeDeployDefault.AllAtOnce \
          --deployment-group-name ezkorea-app-prod \
          --file-exists-behavior OVERWRITE \
          --s3-location bucket=ezkorea-bucket,bundleType=zip,key=ez_korea_app/$GITHUB_SHA.zip \
          --region ap-northeast-2 \

  ## time
  current-time:
    needs: CI-CD
    runs-on: ubuntu-latest
    steps:
      - name: Get Current Time
        uses: 1466587594/get-current-time@v2
        id: current-time
        with:
          format: YYYY-MM-DDTHH:mm:ss
          utcOffset: "+09:00" # 기준이 UTC이기 때문에 한국시간인 KST를 맞추기 위해 +9시간 추가

      - name: Print Current Time
        run: echo "Current Time=${{steps.current-time.outputs.formattedTime}}" # current-time 에서 지정한 포맷대로 현재 시간 출력
        shell: bash