<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ezkorea.hybrid_app.domain.myBatis.SaleMbRepository">

    <select id="findStatList" parameterType="Map" resultType="Map">
        SELECT    A.NAME
                , SUM(A.COUNT) AS COUNT
                , SUM(A.PRICE) AS PRICE
        FROM
        (
            SELECT    CONCAT(MAX(B.NAME), (CASE WHEN MAX(B.TEAM_NAME) IS NULL THEN "" ELSE CONCAT("(", MAX(B.TEAM_NAME), ")") END)) AS NAME
                    , SUM(A.COUNT) / 2 AS COUNT
                    , SUM(A.COUNT) * MAX(C.PRICE) AS PRICE
            FROM    SELL_PRODUCT A INNER JOIN
            (
                SELECT    A.ID AS TABLE_ID
                        , B.ID AS MEMBER_ID
                        , B.NAME AS NAME
                        , C.TEAM_NAME AS TEAM_NAME
                FROM    TIME_TABLE A INNER JOIN MEMBER B
                ON A.MEMBER_ID = B.ID
                LEFT JOIN TEAM C
                ON B.TEAM_ID = C.ID
                <if test="pStatus != null and !''.equals(pStatus)">
                    <choose>
                        <when test="'day'.equals(pStatus)">
                            WHERE   A.TASK_DATE = #{date}
                        </when>
                        <when test="'week'.equals(pStatus)">
                            WHERE   A.TASK_DATE <![CDATA[>=]]> ADDDATE(#{date}, - WEEKDAY(#{date}) + 0)
                            AND		A.TASK_DATE <![CDATA[<=]]> ADDDATE(#{date}, - WEEKDAY(#{date}) + 6)
                        </when>
                        <otherwise>
                            WHERE   A.TASK_DATE <![CDATA[>=]]> LAST_DAY(#{date} - INTERVAL 1 MONTH) + INTERVAL 1 DAY
                            AND		A.TASK_DATE <![CDATA[<=]]> LAST_DAY(#{date})
                        </otherwise>
                    </choose>
                </if>
            ) B
            ON A.TIME_TABLE_ID = B.TABLE_ID
            INNER JOIN
            (
                SELECT    A.WIPER_SORT AS SORT
                        , MAX(A.WIPER_PRICE) AS PRICE
                FROM    WIPER A
                GROUP BY A.WIPER_SORT
            ) C
            ON A.SORT = C.SORT
            WHERE A.STATUS = 'out'
            GROUP BY B.MEMBER_ID, A.SORT
        ) A
        GROUP BY A.NAME
        ORDER BY PRICE DESC, COUNT DESC
        LIMIT 10;
    </select>

    <select id="findTotalStat" parameterType="Map" resultType="Map">
        WITH STAT AS (
            SELECT    A.SORT AS SORT
                    , IFNULL(B.COUNT / 2, 0) AS COUNT
                    , IFNULL(A.PRICE * B.COUNT, 0) AS PRICE
            FROM
            (
                SELECT    A.WIPER_SORT AS SORT
                        , MAX(A.WIPER_PRICE) AS PRICE
                FROM    WIPER A
                GROUP BY A.WIPER_SORT
            ) A LEFT JOIN
            (
                SELECT    B.SORT
                        , SUM(B.COUNT) AS COUNT
                FROM    TIME_TABLE A INNER JOIN SELL_PRODUCT B
                ON A.ID = B.TIME_TABLE_ID
                <if test="pStatus != null and !''.equals(pStatus)">
                    <choose>
                        <when test="'day'.equals(pStatus)">
                            WHERE   A.TASK_DATE = #{date}
                        </when>
                        <when test="'week'.equals(pStatus)">
                            WHERE   A.TASK_DATE <![CDATA[>=]]> ADDDATE(#{date}, - WEEKDAY(#{date}) + 0)
                            AND		A.TASK_DATE <![CDATA[<=]]> ADDDATE(#{date}, - WEEKDAY(#{date}) + 6)
                        </when>
                        <otherwise>
                            WHERE   A.TASK_DATE <![CDATA[>=]]> LAST_DAY(#{date} - INTERVAL 1 MONTH) + INTERVAL 1 DAY
                            AND		A.TASK_DATE <![CDATA[<=]]> LAST_DAY(#{date})
                        </otherwise>
                    </choose>
                </if>
                GROUP BY B.SORT
            ) B
            ON A.SORT = B.SORT
        )
        SELECT    A.SORT AS SORT
                , A.COUNT AS COUNT
                , A.PRICE AS PRICE
        FROM    STAT A
        UNION ALL
        SELECT    'total' AS SORT
                , SUM(A.COUNT) AS COUNT
				, SUM(A.PRICE) AS PRICE
        FROM    STAT A
    </select>

    <select id="findTablePrice" parameterType="Map" resultType="Map">
        WITH STAT AS (
            SELECT    A.PAYMENT AS PAYMENT
                    , SUM(A.COUNT * B.PRICE) AS PRICE
            FROM
            (
                SELECT    A.SORT
                        , A.PAYMENT
                        , SUM(A.COUNT) AS COUNT
                FROM    SELL_PRODUCT A INNER JOIN
                (
                    SELECT  B.ID
                    FROM    TIME_TABLE A  INNER JOIN TIME_TABLE B
                    ON      A.PART = B.PART
                    AND     A.TASK_DATE = B.TASK_DATE
                    AND     A.GAS_STATION_ID = B.GAS_STATION_ID
                    WHERE   A.PART <![CDATA[<>]]> 'in'
                    <if test="tTid != null and tTid > 0">
                    AND     A.ID = #{tTid}
                    </if>
                    <if test="pStatus != null and !''.equals(pStatus)">
                        <choose>
                            <when test="'day'.equals(pStatus)">
                                AND   A.TASK_DATE = #{date}
                            </when>
                            <when test="'week'.equals(pStatus)">
                                AND   A.TASK_DATE <![CDATA[>=]]> ADDDATE(#{date}, - WEEKDAY(#{date}) + 0)
                                AND	  A.TASK_DATE <![CDATA[<=]]> ADDDATE(#{date}, - WEEKDAY(#{date}) + 6)
                            </when>
                            <otherwise>
                                AND   A.TASK_DATE <![CDATA[>=]]> LAST_DAY(#{date} - INTERVAL 1 MONTH) + INTERVAL 1 DAY
                                AND	  A.TASK_DATE <![CDATA[<=]]> LAST_DAY(#{date})
                            </otherwise>
                        </choose>
                    </if>
                ) B
                ON A.TIME_TABLE_ID = B.ID
                WHERE A.STATUS = 'out'
                GROUP BY A.SORT, A.PAYMENT
            ) A INNER JOIN
            (
                SELECT    A.WIPER_SORT AS SORT
                        , MAX(A.WIPER_PRICE) AS PRICE
                FROM    WIPER A
                GROUP BY A.WIPER_SORT
            )B
            ON A.SORT = B.SORT
            GROUP BY A.PAYMENT
            ORDER BY A.PAYMENT
        )
        SELECT    A.PAYMENT
                , A.PRICE
        FROM    STAT A
        UNION ALL
        SELECT  '총계'
                , SUM(A.PRICE)
        FROM    STAT A
    </select>

    <select id="findTableCount" parameterType="Map" resultType="Map">
        SELECT     A.NAME
                 , IFNULL(SUM(CASE WHEN A.NAME = A.NAME AND A.SORT = 'normal' THEN A.COUNT / 2 END), 0) AS normal
                 , IFNULL(SUM(CASE WHEN A.NAME = A.NAME AND A.SORT = 'hybrid' THEN A.COUNT / 2 END), 0) AS hybrid
                 , IFNULL(SUM(CASE WHEN A.NAME = A.NAME AND A.SORT = 'mw' THEN A.COUNT / 2 END), 0) AS mw
                 , IFNULL(SUM(CASE WHEN A.NAME = A.NAME AND A.SORT = 's_class' THEN A.COUNT / 2 END), 0) AS s_class
                 , IFNULL(SUM(CASE WHEN A.NAME = A.NAME AND A.SORT = 'size_700' THEN A.COUNT / 2 END), 0) AS s_700
                 , IFNULL(SUM(CASE WHEN A.NAME = A.NAME THEN A.PRICE END), 0) AS total
        FROM
        (
            SELECT    B.SORT
                    , A.NAME
                    , SUM(B.COUNT) AS COUNT
                    , SUM(B.COUNT) * MAX(C.PRICE) AS PRICE
            FROM
            (
                SELECT  B.ID, C.NAME
                FROM    TIME_TABLE A  INNER JOIN TIME_TABLE B
                ON A.PART = B.PART
                INNER JOIN MEMBER C
                ON B.MEMBER_ID = C.ID
                AND A.TASK_DATE = B.TASK_DATE
                AND A.GAS_STATION_ID = B.GAS_STATION_ID
                WHERE A.ID = #{tTid}
                AND   A.PART <![CDATA[<>]]> 'in'
            ) A
            LEFT OUTER JOIN
            (
                SELECT    A.TIME_TABLE_ID
                        , A.SORT
                        , A.COUNT
                FROM    SELL_PRODUCT A
                WHERE   A.STATUS = 'out'
            ) B
            ON A.ID = B.TIME_TABLE_ID
            LEFT OUTER JOIN
            (
                SELECT    A.WIPER_SORT AS SORT
                        , MAX(A.WIPER_PRICE) AS PRICE
                FROM    WIPER A
                GROUP BY A.WIPER_SORT
            ) C
            ON B.SORT = C.SORT
            GROUP BY B.SORT, A.NAME
        ) A
        GROUP BY A.NAME
    </select>

    <select id="findTableFix" parameterType="Map" resultType="Map">
        SELECT    A.SORT AS SORT
                , A.MEMO AS MEMO
        FROM    SELL_PRODUCT A INNER JOIN
        (
            SELECT  B.ID
            FROM    TIME_TABLE A  INNER JOIN TIME_TABLE B
            ON A.PART = B.PART
            INNER JOIN MEMBER C
            ON B.MEMBER_ID = C.ID
            AND A.TASK_DATE = B.TASK_DATE
            AND A.GAS_STATION_ID = B.GAS_STATION_ID
            WHERE A.ID = #{tTid}
            AND   A.PART <![CDATA[<>]]> 'in'
        ) B
        ON A.TIME_TABLE_ID = B.ID
        WHERE A.STATUS = 'fix'
    </select>

    <select id="findSellDetailByStationAndDate" parameterType="Map" resultType="Map">
        SELECT 	  MAX(A.NAME) AS NAME
                , MAX(A.PART) AS PART
                , IFNULL(SUM(CASE WHEN A.NAME = A.NAME AND A.SORT = 'normal' THEN A.COUNT END), 0) AS normal
                , IFNULL(SUM(CASE WHEN A.NAME = A.NAME AND A.SORT = 'hybrid' THEN A.COUNT END), 0) AS hybrid
                , IFNULL(SUM(CASE WHEN A.NAME = A.NAME AND A.SORT = 'mw' THEN A.COUNT END), 0) AS mw
                , IFNULL(SUM(CASE WHEN A.NAME = A.NAME AND A.SORT = 's_class' THEN A.COUNT END), 0) AS s_class
                , IFNULL(SUM(CASE WHEN A.NAME = A.NAME AND A.SORT = 'size_700' THEN A.COUNT END), 0) AS s_700
                , IFNULL(SUM(CASE WHEN A.NAME = A.NAME THEN A.COUNT END), 0) AS total
        FROM
        (
            SELECT    A.PART
                    , A.ID
                    , B.NAME
                    , C.SORT
                    , C.COUNT  / 2 AS COUNT
            FROM    TIME_TABLE A INNER JOIN MEMBER B
            ON A.MEMBER_ID = B.ID
            LEFT JOIN
            (
                SELECT    A.TIME_TABLE_ID
                        , A.SORT
                        , A.COUNT
                FROM    SELL_PRODUCT A
                WHERE   A.STATUS = 'out'
            ) C
            ON A.ID = C.TIME_TABLE_ID
            WHERE A.GAS_STATION_ID = #{id}
            AND	  A.TASK_DATE = #{date}
            AND	  A.PART <![CDATA[<>]]> "in"
        ) A
        GROUP BY A.ID
    </select>
</mapper>